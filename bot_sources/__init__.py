import io

from loguru import logger
from telebot import TeleBot, apihelper
from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton

from GoogleSheetsAPI import GoogleSync
from models import User, Group, Links, Equipment, Movement, Person
from settings import BOT_TOKEN, BOT_PROXY, LOG_FILE, INVENTARIZATION_SPREADSHEET_ID, PHONE_SPREADSHEET_ID, \
    IT_SUPPORT_TABLE, IT_SUPPORT_FORM

logger.add(LOG_FILE)

apihelper.proxy = BOT_PROXY
bot = TeleBot(token=BOT_TOKEN, num_threads=4)


def is_person(chat):
    if chat.type == 'private':
        return True
    return False


def get_unauthorized_user_start_message():
    return f"""–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!
–î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞–∑—Ä–µ—à–∏—Ç –í–∞–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞!"""


def user_info(user: User):
    groups_str = ""
    for item in Group.select(Group).join(Links).join(User).where(User.id == user.id):
        groups_str += item.group_name + ' '
    return f"""–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:
    ID: {user.telegram_id}
    FName: {user.first_name}
    LName: {user.last_name}
    Groups: {groups_str}"""


def get_new_unauthorized_user_message(user: User):
    return f"""–ù–æ–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
{user_info(user)}"""


def get_start_keyboard(user: User):
    start_keyboard = ReplyKeyboardMarkup(True)
    start_keyboard.add('–ù–∞ –≥–ª–∞–≤–Ω—É—é')
    return start_keyboard


def get_main_inline_keyboard(user: User):
    ret_keyboard = InlineKeyboardMarkup(row_width=3)
    if user in User.select(User).join(Links).join(Group).where(Group.group_name == 'Zavhoz'):
        ret_keyboard.add(InlineKeyboardButton(text=' üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
                                              callback_data='check_equipment'))
    if user in User.select(User).join(Links).join(Group).where(Group.group_name == 'Inventarization'):
        ret_keyboard.add(InlineKeyboardButton(text=' üîç –ü–æ–∏—Å–∫ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
                                              callback_data='move_equipment'))
    if user in User.select(User).join(Links).join(Group).where(Group.group_name == 'Users'):
        ret_keyboard.add(InlineKeyboardButton(text=' ‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫',
                                              callback_data='phone_number_search'))
    if user in User.select(User).join(Links).join(Group).where(Group.group_name == 'SysAdmins'):
        ret_keyboard.add(InlineKeyboardButton(text=' üìã –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫',
                                              url=IT_SUPPORT_TABLE))
    if user in User.select(User).join(Links).join(Group).where(Group.group_name == 'Users'):
        ret_keyboard.add(InlineKeyboardButton(text=' üÜò –§–æ—Ä–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ IT-—Å–ª—É–∂–±—É',
                                              url=IT_SUPPORT_FORM))
    return ret_keyboard


main_movement_keyboard = InlineKeyboardMarkup()
main_movement_keyboard.add(InlineKeyboardButton(text='–ò–Ω–≤–µ–Ω—Ç–∞—Ä–Ω—ã–π –Ω–æ–º–µ—Ä', callback_data='main_invent_search'))
main_movement_keyboard.add(InlineKeyboardButton(text='–°–∞—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä', callback_data='main_serial_search'))

groups_keyboard = InlineKeyboardMarkup()
groups_keyboard.add(InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä—É–ø–ø', callback_data='Groups-list'))
groups_keyboard.add(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É', callback_data='ADD-group'))
groups_keyboard.add(InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É', callback_data='RM-group'))

inventarization_inline_keyboard = InlineKeyboardMarkup()
inventarization_inline_keyboard.add(InlineKeyboardButton(text='–ü–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–æ–º—É –Ω–æ–º–µ—Ä—É'),
                                    InlineKeyboardButton(text='–ü–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É'))


def get_rm_group_keyboard():
    groups = Group.select()
    rm_group_keyboard = InlineKeyboardMarkup()
    for group in groups:
        rm_group_keyboard.add(InlineKeyboardButton(text=group.group_name, callback_data=f'rm-group_{group.id}'))
    return rm_group_keyboard


def get_user_help_message(user: User):
    ret_message = """–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –í–∞–º –∫–æ–º–∞–Ω–¥:"""
    if user in User.select(User).join(Links).join(Group).where(Group.group_name == 'Admins'):
        ret_message += """
/all_users_info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–∏–≤—à–∏—Ö—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
/groups - —Ä–∞–±–æ—Ç–∞ —Å –≥—Ä—É–ø–ø–∞–º–∏
/google_update - –ø–æ–ª—É—á–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
    if user in User.select(User).join(Links).join(Group).where(Group.group_name == 'PhonesAdmin'):
        ret_message += """
/phones_update - –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
    return ret_message


def get_admin_help_message():
    return f"""
/all_users_info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–∏–≤—à–∏—Ö—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
/groups - —Ä–∞–±–æ—Ç–∞ —Å –≥—Ä—É–ø–ø–∞–º–∏
/google_update - –ø–æ–ª—É—á–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""


def keyboard_to_chose_users_groups(user: User):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É', callback_data=f'add-user-to-group_{user.id}'),
                 InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –∏–∑ –≥—Ä—É–ø–ø—ã', callback_data=f'rm-user-from-group_{user.id}'))
    return keyboard


def equipment_info(equipment: Equipment):
    ret_str = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏\n'
    ret_str += f'ID: {equipment.it_id}\n'
    ret_str += f'–ò–Ω–≤–µ–Ω—Ç–∞—Ä–Ω—ã–π –Ω–æ–º–µ—Ä: {equipment.invent_num}\n'
    ret_str += f'–¢–∏–ø: {equipment.type}\n'
    ret_str += f'–ú–∞—Ä–∫–∞: {equipment.mark}\n'
    ret_str += f'–ú–æ–¥–µ–ª—å: {equipment.model}\n'
    ret_str += f'–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä: {equipment.serial_num}\n\n'
    try:
        movements = Movement.select().where(Movement.equipment == equipment)
        movement = None
        for item in movements:
            movement = item
        ret_str += f'–ö–æ—Ä–ø—É—Å: {movement.campus}\n'
        ret_str += f'–ö–∞–±–∏–Ω–µ—Ç: {movement.room}\n'
    except:
        ret_str += '–ö–æ—Ä–ø—É—Å: N/A\n'
        ret_str += '–ö–∞–±–∏–Ω–µ—Ç: N/A\n'
    return ret_str


def send_equipment_info_to_google_sheet(equipment: Equipment):
    GoogleSync(spreadsheet_id=INVENTARIZATION_SPREADSHEET_ID).write_data_to_range(list_name='–°–ø–∏—Å–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
                                                                                  range_in_list=f'A{equipment.id + 1}:G{equipment.id + 1}',
                                                                                  data=[[
                                                                                      str(equipment.it_id),
                                                                                      str(equipment.pos_in_buh),
                                                                                      str(equipment.invent_num),
                                                                                      str(equipment.type),
                                                                                      str(equipment.mark),
                                                                                      str(equipment.model),
                                                                                      str(equipment.serial_num)
                                                                                  ]])


def send_movement_to_google_sheet(equipment: Equipment, movement: Movement):
    GoogleSync(spreadsheet_id=INVENTARIZATION_SPREADSHEET_ID).write_data_to_range(list_name='–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
                                                                                  range_in_list=f'A{movement.id + 1}:G{movement.id + 1}',
                                                                                  data=[[
                                                                                      str(equipment.it_id),
                                                                                      str(movement.campus),
                                                                                      str(movement.room)
                                                                                  ]])


def get_equipment_reply_markup(equipment: Equipment):
    ret_markup = InlineKeyboardMarkup()
    ret_markup.add(InlineKeyboardButton(text='–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                                        callback_data=f'edit_info-{equipment.id}'))
    ret_markup.add(InlineKeyboardButton(text='–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
                                        callback_data=f'move_equipment-{equipment.id}'))
    return ret_markup


def get_edit_equipment_keyboard(equipment: Equipment):
    edit_equipment_keyboard = InlineKeyboardMarkup()
    edit_equipment_keyboard.add(InlineKeyboardButton(text='–¢–∏–ø',
                                                     callback_data=f'edit/type-{equipment.id}'))
    edit_equipment_keyboard.add(InlineKeyboardButton(text='–ú–∞—Ä–∫–∞',
                                                     callback_data=f'edit/mark-{equipment.id}'))
    edit_equipment_keyboard.add(InlineKeyboardButton(text='–ú–æ–¥–µ–ª—å',
                                                     callback_data=f'edit/model-{equipment.id}'))
    edit_equipment_keyboard.add(InlineKeyboardButton(text='–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä',
                                                     callback_data=f'edit/serial-{equipment.id}'))
    return edit_equipment_keyboard


def get_kurpus_keyboard_for_create_movement(equipment: Equipment):
    ret_keyboard = InlineKeyboardMarkup()
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 1', callback_data=f'choose_room-UK1-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 2', callback_data=f'choose_room-UK2-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 3', callback_data=f'choose_room-UK3-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 4', callback_data=f'choose_room-UK4-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 5', callback_data=f'choose_room-UK5-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 6', callback_data=f'choose_room-UK6-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 7', callback_data=f'choose_room-UK7-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 8', callback_data=f'choose_room-UK8-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 9', callback_data=f'choose_room-UK9-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–£–ö 10', callback_data=f'choose_room-UK10-{equipment.id}'))
    ret_keyboard.add(InlineKeyboardButton(text='–°–ø–∏—Å–∞–Ω–∏–µ', callback_data=f'choose_room-UKspisanie-{equipment.id}'))
    return ret_keyboard


phone_search_parameters = InlineKeyboardMarkup()
phone_search_parameters.add(InlineKeyboardButton(text='–§–∞–º–∏–ª–∏—è', callback_data='Surname_phone_search'))
phone_search_parameters.add(InlineKeyboardButton(text='–ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ', callback_data='Name_phone_search'))
phone_search_parameters.add(InlineKeyboardButton(text='–¢–µ–ª–µ—Ñ–æ–Ω', callback_data='Number_phone_search'))
phone_search_parameters.add(InlineKeyboardButton(text='–ö–ª–∞—Å—Å–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å', callback_data='KlassRuk_phone_search'))


def get_classes_table():
    ret_keyboard = InlineKeyboardMarkup()
    ret_keyboard.row(InlineKeyboardButton(text='1–ê', callback_data='–∫–ª–∞—Å—Å_1–ê'),
                     InlineKeyboardButton(text='1–ë', callback_data='–∫–ª–∞—Å—Å_1–ë'),
                     InlineKeyboardButton(text='1–í', callback_data='–∫–ª–∞—Å—Å_1–í'),
                     InlineKeyboardButton(text='1–ì', callback_data='–∫–ª–∞—Å—Å_1–ì'),
                     InlineKeyboardButton(text='1–î', callback_data='–∫–ª–∞—Å—Å_1–î'),
                     InlineKeyboardButton(text='1–ú', callback_data='–∫–ª–∞—Å—Å_1–ú'),
                     InlineKeyboardButton(text='1–ù', callback_data='–∫–ª–∞—Å—Å_1–ù')
                     )
    ret_keyboard.row(InlineKeyboardButton(text='2–ê', callback_data='–∫–ª–∞—Å—Å_2–ê'),
                     InlineKeyboardButton(text='2–ë', callback_data='–∫–ª–∞—Å—Å_2–ë'),
                     InlineKeyboardButton(text='2–í', callback_data='–∫–ª–∞—Å—Å_2–í'),
                     InlineKeyboardButton(text='2–ì', callback_data='–∫–ª–∞—Å—Å_2–ì'),
                     InlineKeyboardButton(text='2–î', callback_data='–∫–ª–∞—Å—Å_2–î'),
                     InlineKeyboardButton(text='2–õ', callback_data='–∫–ª–∞—Å—Å_2–õ'),
                     InlineKeyboardButton(text='2–ú', callback_data='–∫–ª–∞—Å—Å_2–ú')
                     )
    ret_keyboard.row(InlineKeyboardButton(text='3–ê', callback_data='–∫–ª–∞—Å—Å_3–ê'),
                     InlineKeyboardButton(text='3–ë', callback_data='–∫–ª–∞—Å—Å_3–ë'),
                     InlineKeyboardButton(text='3–í', callback_data='–∫–ª–∞—Å—Å_3–í'),
                     InlineKeyboardButton(text='3–õ', callback_data='–∫–ª–∞—Å—Å_3–õ'),
                     InlineKeyboardButton(text='3–ú', callback_data='–∫–ª–∞—Å—Å_3–ú'),
                     InlineKeyboardButton(text='3–£', callback_data='–∫–ª–∞—Å—Å_3–£')
                     )
    ret_keyboard.row(InlineKeyboardButton(text='4–ê', callback_data='–∫–ª–∞—Å—Å_4–ê'),
                     InlineKeyboardButton(text='4–ë', callback_data='–∫–ª–∞—Å—Å_4–ë'),
                     InlineKeyboardButton(text='4–í', callback_data='–∫–ª–∞—Å—Å_4–í'),
                     InlineKeyboardButton(text='4–ì', callback_data='–∫–ª–∞—Å—Å_4–ì'),
                     InlineKeyboardButton(text='4–õ', callback_data='–∫–ª–∞—Å—Å_4–õ'),
                     InlineKeyboardButton(text='4–ú', callback_data='–∫–ª–∞—Å—Å_4–ú'),
                     InlineKeyboardButton(text='4–£', callback_data='–∫–ª–∞—Å—Å_4–£')
                     )
    ret_keyboard.row(InlineKeyboardButton(text='5–ê', callback_data='–∫–ª–∞—Å—Å_5–ê'),
                     InlineKeyboardButton(text='5–ë', callback_data='–∫–ª–∞—Å—Å_5–ë'),
                     InlineKeyboardButton(text='5–í', callback_data='–∫–ª–∞—Å—Å_5–í'),
                     InlineKeyboardButton(text='5–î', callback_data='–∫–ª–∞—Å—Å_5–î'),
                     InlineKeyboardButton(text='5–õ', callback_data='–∫–ª–∞—Å—Å_5–õ'),
                     InlineKeyboardButton(text='5–ú', callback_data='–∫–ª–∞—Å—Å_5–ú'),
                     InlineKeyboardButton(text='5–ù', callback_data='–∫–ª–∞—Å—Å_5–ù')
                     )
    ret_keyboard.row(InlineKeyboardButton(text='6–ê', callback_data='–∫–ª–∞—Å—Å_6–ê'),
                     InlineKeyboardButton(text='6–ë', callback_data='–∫–ª–∞—Å—Å_6–ë'),
                     InlineKeyboardButton(text='6–í', callback_data='–∫–ª–∞—Å—Å_6–í'),
                     InlineKeyboardButton(text='6–ì', callback_data='–∫–ª–∞—Å—Å_6–ì'),
                     InlineKeyboardButton(text='6–î', callback_data='–∫–ª–∞—Å—Å_6–î'),
                     InlineKeyboardButton(text='6–õ', callback_data='–∫–ª–∞—Å—Å_6–õ'),
                     InlineKeyboardButton(text='6–ú', callback_data='–∫–ª–∞—Å—Å_6–ú')
                     )
    ret_keyboard.row(InlineKeyboardButton(text='7–ê', callback_data='–∫–ª–∞—Å—Å_7–ê'),
                     InlineKeyboardButton(text='7–ë', callback_data='–∫–ª–∞—Å—Å_7–ë'),
                     InlineKeyboardButton(text='7–ì', callback_data='–∫–ª–∞—Å—Å_7–ì'),
                     InlineKeyboardButton(text='7–î', callback_data='–∫–ª–∞—Å—Å_7–î'),
                     InlineKeyboardButton(text='7–ö', callback_data='–∫–ª–∞—Å—Å_7–ö'),
                     InlineKeyboardButton(text='7–ú', callback_data='–∫–ª–∞—Å—Å_7–ú'),
                     InlineKeyboardButton(text='7–ù', callback_data='–∫–ª–∞—Å—Å_7–ù')
                     )
    ret_keyboard.row(InlineKeyboardButton(text='8–ò', callback_data='–∫–ª–∞—Å—Å_8–ò'),
                     InlineKeyboardButton(text='8–ö', callback_data='–∫–ª–∞—Å—Å_8–ö'),
                     InlineKeyboardButton(text='8–ú', callback_data='–∫–ª–∞—Å—Å_8–ú'),
                     InlineKeyboardButton(text='8–°', callback_data='–∫–ª–∞—Å—Å_8–°'),
                     InlineKeyboardButton(text='8–≠', callback_data='–∫–ª–∞—Å—Å_8–≠'),
                     InlineKeyboardButton(text='8–Ø', callback_data='–∫–ª–∞—Å—Å_8–Ø')
                     )
    ret_keyboard.row(InlineKeyboardButton(text='9–ê', callback_data='–∫–ª–∞—Å—Å_9–ê'),
                     InlineKeyboardButton(text='9–ë', callback_data='–∫–ª–∞—Å—Å_9–ë'),
                     InlineKeyboardButton(text='9–í', callback_data='–∫–ª–∞—Å—Å_9–í'),
                     InlineKeyboardButton(text='9–ì', callback_data='–∫–ª–∞—Å—Å_9–ì'),
                     InlineKeyboardButton(text='9–ö', callback_data='–∫–ª–∞—Å—Å_9–ö'),
                     InlineKeyboardButton(text='9–õ', callback_data='–∫–ª–∞—Å—Å_9–õ'),
                     InlineKeyboardButton(text='9–ú', callback_data='–∫–ª–∞—Å—Å_9–ú')
                     )
    return ret_keyboard


def get_person_info(person: Person):
    ret_str = f"""{person.surname} {person.name} {person.patronymic}
–î–æ–ª–∂–Ω–æ—Å—Ç—å: {person.position}
E-mail: {person.email}"""
    return ret_str


def get_contact_reply_markup(user: User, person: Person):
    reply_markup = None
    if user in User.select(User).join(Links).join(Group).where(Group.group_name == 'PhonesAdmin'):
        reply_markup = InlineKeyboardMarkup()
        reply_markup.row(InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å',
                                              callback_data=f"Change-person_{person.id}"),
                         InlineKeyboardButton(text='–í–∏–¥–∏–º—ã–π ‚úÖ' if person.actual == 'True' else '–ù–µ–≤–∏–¥–∏–º—ã–π ‚ùå',
                                              callback_data=f"ChActual_{person.id}"))

    return reply_markup


def send_contact_info(chat_id, person: Person, user: User):
    if not person.photo == '':
        bot.send_photo(chat_id=chat_id,
                       photo=person.photo,
                       caption=get_person_info(person),
                       reply_markup=get_contact_reply_markup(user, person))
    else:
        bot.send_message(chat_id=chat_id,
                         text=get_person_info(person),
                         reply_markup=get_contact_reply_markup(user, person))
    bot.send_contact(chat_id=chat_id,
                     phone_number=person.phone,
                     first_name=person.surname,
                     last_name=f"{person.name} {person.patronymic}")
    vcf = io.StringIO()
    vcf.name = f'{person.surname} {person.name} {person.patronymic}.vcf'
    vcf.write('BEGIN:VCARD' + "\n")
    vcf.write('VERSION:3.0' + "\n")
    vcf.write('N:' + f'{person.surname};{person.name};{person.patronymic}' + "\n")
    vcf.write('ORG:' + '–ì–ë–û–£ –®–∫–æ–ª–∞ \" –î–º–∏—Ç—Ä–æ–≤—Å–∫–∏–π\"' + "\n")
    vcf.write('TEL;CELL:' + person.phone + "\n")
    vcf.write('EMAIL:' + person.email + "\n")
    vcf.write('END:VCARD' + "\n")
    vcf.write("\n")
    vcf.seek(0, 0)
    bot.send_document(chat_id=chat_id,
                      data=vcf,
                      caption='–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ –Ω–∞ –í–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å–∫–∞—á–∞–π—Ç–µ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª ‚¨ÜÔ∏è')
    vcf.close()


def get_change_person_reply_markup(person: Person):
    reply_markup = InlineKeyboardMarkup(row_width=1)
    reply_markup.add(InlineKeyboardButton(text='–§–∞–º–∏–ª–∏—è',
                                          callback_data=f'Edit_person-surname_{person.id}'))
    reply_markup.add(InlineKeyboardButton(text='–ò–º—è',
                                          callback_data=f'Edit_person-name_{person.id}'))
    reply_markup.add(InlineKeyboardButton(text='–û—Ç—á–µ—Å—Ç–≤–æ',
                                          callback_data=f'Edit_person-patronymic_{person.id}'))
    reply_markup.add(InlineKeyboardButton(text='–¢–µ–ª–µ—Ñ–æ–Ω',
                                          callback_data=f'Edit_person-phone_{person.id}'))
    reply_markup.add(InlineKeyboardButton(text='–§–æ—Ç–æ',
                                          callback_data=f'Edit_person-photo_{person.id}'))
    reply_markup.add(InlineKeyboardButton(text='–î–æ–ª–∂–Ω–æ—Å—Ç—å',
                                          callback_data=f'Edit_person-position_{person.id}'))
    reply_markup.add(InlineKeyboardButton(text='e-mail',
                                          callback_data=f'Edit_person-email_{person.id}'))
    return reply_markup


def update_person_info_in_google(person: Person):
    GoogleSync(spreadsheet_id=PHONE_SPREADSHEET_ID).write_data_to_range(list_name='List1',
                                                                        range_in_list=f'A{person.id + 1}:G{person.id + 1}',
                                                                        data=[[
                                                                            str(person.surname),
                                                                            str(person.name),
                                                                            str(person.patronymic),
                                                                            str(person.position),
                                                                            str(person.photo),
                                                                            str(person.phone),
                                                                            str(person.email)
                                                                        ]])


import bot_sources.commands
import bot_sources.text_messages
import bot_sources.callbacks
import bot_sources.photo_messages
